1. Return в формате JSON при любой операции (в основном какого-либо изменения):
    1.1. Простой ответ на единичную операцию:
        return {"message": <текст сообщения>}

    1.2. Развернутый ответ на операции с объектами:
        return {"<имя объекта>": <объект>,
                "detail": {<словари деталей>}
            }

        Возможные словари:
            {"success": [   {"key": "<ключ_1>", "value": <значение_1>},
                            . . .
                            {"key": "<ключ_N>", "value": <значение_N>} ]
            }
            {"errors":  [   {"key": "<ключ_1>", "value": <значение_1>},
                            . . .
                            {"key": "<ключ_N>", "value": <значение_N>} ]
            }

        Некоторые предопределенные элементы словарей:
            {"success": {"key": "message", "value": <текст сообщения>},     -- обычно выводится в модальном окне, но возможно и в поле страницы
                        {"key": "reload", "value": "/"},                    -- перезагрузка страницы
                        {"key": "redirect", "value": <URL>}                 -- переход на страницу <URL>
            }
            {"errors":  {"key": "message", "value": <текст ошибки>},        -- обычно выводится в модальном окне, но возможно и в поле страницы
                        {"key": "<id элемента>", "value": <текст ошибки>}   -- вывод текта ошибки в поле с <id элемента> на странице
            }


2.  return templates.TemplateResponse(  <относительный путь к открываемой странице - html-файлу>",
                                        {<словарь реквизитов для открываемой страницы>} )
        Обязательные реквизиты:
                                "request": <request>,
                                "title": <заголовок страницы>, 
                                "user": app.extra["user"]       -- словарь с реквизитами текущего пользователя, как мимнимум
                                                                -- "is_authenticated": False | True

3. Redirect:
    1.1. return responses.RedirectResponse(<URL>, status_code=status.HTTP_302_FOUND)
            где <URL> - относительный url прехода.

    1.2. См. Return в формате JSON:
        используется {"detail": {"success": [{"key": "redirect", "value": <URL>}]}}


